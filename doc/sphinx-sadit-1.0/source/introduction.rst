Introduction
================================
SADIT is a byproduct of research project **A Coordinated Approach to Cyber-Situation Awarness Based on Traffic Anomaly
Detection**.

..  SADIT aims to provide a set of internet anomaly detection

..  Cyber espionage poses a substantial threat to both corporate and government entities. Attacks can be precise and targeted efforts, such as extracting credit card transaction records from a central data server. Attacks can also be seemingly benign, such as randomly crawling through a serverâ€™s contents. It is thought that these attacks are trials to see if access to critical information can be gained. Data exfiltration varies over a broad spectrum. On one end is the case of a user, granted server access through legitimate means, exporting sensitive information to an external entity. On the other end is the case of an external user, through access inadvertently granted by a typical user, downloading random pieces of information.

..  Some techniques to detect attacks are based on analyzing the information has been accessed. However, it is not effective in many cases. One case is that the attackers are authenticated users themselves or authoenticated users controlled by attackers. Another case is that, the web server owner resort third party software to detect anomaly and don't want to disclose the information to third-party software.

..  For some cases, a better approach would be to use statistical models to analyze the patterns of traffic to the webserver. The advatage is that this method is more general and have the ability to detect unknown anomalies.

**SADIT** provides a framework to generate the traffic data with known
anomalies through simulation. It also implement one algorithm proposed by `Jing Conan Wang <http://people.bu.edu/wangjing/>`_, Ronald Lockle Taylor and `Yannis Paschalidis <http://ionia.bu.edu/>`_ .Look at our `poster <http://people.bu.edu/wangjing/pdf/data_exfiltration-back.pdf>`_ for more information of our work

**configure**
    configure the simulator based on the description of anomaly in settings.py.
    In current version, it is **DOT file** needed by *fs*-simulator.
**simulator**
    Generate the traffic through simulation. In current version, it is a revised
    version of `fs-simulator <http://cs.colgate.edu/~jsommers/#code>`_. It will read
    the **DOT file** generated by **configure** and generate a network flow
    file with Cisco Netflow version 5 binary format.
**detector**
    this module will read the network flow file generate by **simulator** and
    try to detect anomaly accordingly. In current version, the detector is based
    on one of our `paper <http://people.bu.edu/wangjing/html/AnomalyDetection.html>`_. Look at our `poster <http://people.bu.edu/wangjing/pdf/data_e    xfiltration-back.pdf>`_ for more information of our work.

Configure
====================================
Configure generate the corresponding DOT file according to description of user
behaviour.
    - **Network**: Describe the Network
    - **Node**: Describe each host in the network
    - **Anomaly**: Describe the Anomaly
    - **Generator**: Traffic Generator
    - **Modulator**: Traffic Patter
    - **Behaviour**: Description of User behaviour.

**Generator**, **Modulator** and **Behaviour** can completely decribe the traffic
of users. **Generator** describe the type of traffic. **Modulator** describe the
duration. And **Behaviour** describes the action of users take each time.

**Generator** and **Modulator** is used in *fs*-simulator.
In the current version, two types of modulator are supported: **Normal** and
**Markov**. For the normal modulator,  it is descrbibed by *start*, *generator*,
*profile*. 
For the markov modulator, every *t* second it will the use will choose from two
*states*.
